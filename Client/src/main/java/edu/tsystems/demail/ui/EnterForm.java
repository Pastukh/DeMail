package edu.tsystems.demail.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import edu.tsystems.demail.Client;
import edu.tsystems.demail.DTO.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Arrays;

/**
 * Author: Ivan Pastukh
 * Date: 06.06.13
 * Time: 14:21
 */
public class EnterForm {
    private JButton button1;
    private JPanel panel1;
    private JTextField textField1;
    private JLabel ConnectionStatus;
    private JButton registerButton;
    private JButton closeButton;
    private JPasswordField passwordField1;
    private JLabel label1;
    private JFrame frame;
    //    private UserService userService;
    private LoginDTO loginDTO;
    private UserDTO userDTO = new UserDTO();
    private boolean isLogin;

    public EnterForm() {
        closeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                isLogin = (loginUser());
                if (isLogin)
                new MainForm().start(userDTO);
            }
        });
        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new RegistrationForm().createUI();

            }
        });
    }

    public boolean loginUser() {
//        UserDTO user = null;
        boolean ret = false;
        try {
            userDTO = new UserDTO();
            LoginDTO loginDTO = new LoginDTO();
            loginDTO.setLogin(textField1.getText());
            loginDTO.setPassword(Arrays.toString(passwordField1.getPassword()));
            Client.sendTask("LOGIN", loginDTO);
            userDTO = (UserDTO) Client.getAnswer();
            if (userDTO != null) {
                ConnectionStatus.setText("Welcome, " + userDTO.getFirstname() + "!");
                ret = true;
            } else ConnectionStatus.setText("Check entered data, please.");
        } catch (IOException e) {
            ConnectionStatus.setText("Connection error!");
            e.printStackTrace();
        } catch (NullPointerException eq) {
            ConnectionStatus.setText("Have not answer from server!");
           // eq.printStackTrace();
        }

        return ret;
    }

    public void start() {
        createUIComponents();

    }

    private void createUIComponents() {
        frame = new JFrame("DeMail");
        frame.setContentPane(new EnterForm().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(5, 3, new Insets(0, 0, 0, 0), 0, 0));
        panel1.setName("panel1");
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        textField1 = new JTextField();
        textField1.setColumns(1);
        textField1.setHorizontalAlignment(10);
        textField1.setName("textFiled1");
        textField1.setText("user");
        panel1.add(textField1, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ConnectionStatus = new JLabel();
        ConnectionStatus.setName("ConStatus");
        ConnectionStatus.setText("Fill the fields");
        panel1.add(ConnectionStatus, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        button1 = new JButton();
        button1.setLabel("Login");
        button1.setName("button1");
        button1.setText("Login");
        panel1.add(button1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        closeButton = new JButton();
        closeButton.setName("button3");
        closeButton.setText("Close");
        panel1.add(closeButton, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        registerButton = new JButton();
        registerButton.setName("button2");
        registerButton.setText("Register");
        panel1.add(registerButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        passwordField1.setText("123");
        panel1.add(passwordField1, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
